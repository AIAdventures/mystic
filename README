== Notes on mystic and pyina examples ==

Dependencies:
 - All modules with prefix "test_" should run without new dependencies.
 - All modules with prefix "scipy_" requires scipy to be installed. (tested on version 0.4.8).
 - All modules with prefix "sam_" requires "sam" and "scipy" to be installed. 
 - All modules with prefix "cg_" requires "sam" and "scipy" to be installed. It tries a few of the test problems with conjugate gradient method (which finds local minima).
 - All modules with prefix "gplot_" requres gnuplot-py to be installed.

Additional egg for Mathematica Users:
 - mystic.nb: The mathematica notebook with most of the test functions used.


Notes on the "ffit" tests/examples:
 - test_ffit: The fitting problem whose exact solution is 8th order Chebyshev polynomial of the first kind.  This example uses a Ctrl-C signal handler. Try ctrl-c as the differential_evolution strategy is running.

Notes on the "mogi" tests/examples:
 - test_mogi.py: One mogi source with noise, comparison between DE and Conjugate Gradient, Simplex, and least squares (Levenberg Marquardt). CG / lsq don't work very well. lsq should work when bounds on the parameters are given, but minpack (wrapped by scipy) version doesn't seem to support bounds.
 - sam_mogi.py: charts the progress of scipy's Nelder Mead and draws with matlab
 - test_mogi_leastsq.py: tests with scipy (minpack's) leastsq, but hasn't been tuned so it doesn't work at all.
 - test_mogi_anneal.py: tests with scipy simulated annealing, but hasn't been tuned, so again, doesn't work at all.
 - test_mogi2.py: two mogi sources
 - test_mpimogi.py: mpi version of test_mogi.py, default uses 4 proc
 - test_mpimogi2.py: mpi version of test_mogi2.py, default uses 4 proc
 - test_mogi3.py: reimplements test_mogi 


Notes on other examples:
 - CubeSection.py requires VTK + Tkinter. Helps visualize the process of finding the biggest square inside a unit cube.


adapted from pyina CVS 2008-07-07

# end of file
